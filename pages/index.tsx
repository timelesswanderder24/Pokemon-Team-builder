import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import PokeCard from '../components/cards/pokes/PokeCard';
import { mockPokeCardProps } from '../components/cards/pokes/PokeCard.mocks';
import styles from '../styles/Home.module.css';
import {useState} from 'react';

const Home: NextPage = () => {
  const [team, addTeam] = useState<any[]>([]);
  const [pokeNames, addPokeName] = useState<any[]>([]);
  const [maxReached, maxUpdate] = useState(false);
  const [width, setWidth] = useState(0); 
 
  async function updateNewPoke(id: string, name: string, url: string) {  
    const response = await fetch('/api/pokemonTeamAPI', {
      method: 'POST', 
      body: JSON.stringify({
        id,      
        name,    
        url
      }),
      headers: {
        'Content-Type': 'application/json'
      }
    })
    
  }
/*
  async function getPokemon(search:string){
    if (search !== "") {
      const response = await fetch('/api/pokemonsAPI')
      const data = await response.json() 
      const final = data.filter((poke: { name: string | string[]; }) => poke.name.includes(search));
      return final;
    } 
  }*/
 
  
  async function refreshTeam() {
    const response = await fetch('/api/pokemonTeamAPI')
    const data = await response.json()
    console.log(data)
    addTeam(data);
  }

 async function addToTeam(search: string){ 
  if(team.length<=3){
    if (search !== "") {
      const response = await fetch('/api/pokemonsAPI')
      const data = await response.json() 
      //const final = data.filter((((poke: { name: string; url:string;}) => poke.name == search)));
      //const pokemon = final[0];
      //console.log(pokemon.url);
      updateNewPoke("3","pale", "pale")
      refreshTeam()
      //addPokeName(pokemon.name)
      maxUpdate(false)
    } 
  }else{  
    maxUpdate(true)
  }
  }


  return (
    <div className={styles.container}> 
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
      <h1 className={styles.title}>
          Select four pokemons for your team! 
        </h1>

      <div className={styles.grid}>
        <div className={styles.card} onClick={() => addToTeam("ditto")}>
            <h2>ditto</h2>
          </div>

          <div className={styles.card} onClick={() => addToTeam("charmander")}>
            <h2>charmander</h2>
          </div>

          <div className={styles.card} onClick={() => addToTeam("pikachu")}>
            <h2>pikachu</h2>
          </div>

          <div className={styles.card} onClick={() => addToTeam("Eevee")}>
            <h2>Eevee</h2>
          </div>

          <div className={styles.card} onClick={() => addToTeam("snorlax")}>
            <h2>snorlax</h2>
          </div>

          <div className={styles.card} onClick={() => addToTeam("chizard")}>
            <h2>chizard</h2>
          </div>

          <div className={styles.card} onClick={() => addToTeam("piplup")}>
            <h2>piplup</h2>
          </div>

          <div className={styles.card} onClick={() => addToTeam("mewtwo")}>
            <h2>mewtwo</h2>
          </div>

          <div className={styles.card} onClick={() => addToTeam("squirtle")}>
            <h2>squirtle</h2>
          </div>
        </div>
        <div className={styles.grid}>
        
        {team.length==0?(
          <div></div>
        ):(
          <div>
            <h1 className={styles.title}>
            Your Pokemon team
            </h1>
            
          </div>
        )}

        </div>
      </main>

      <footer className={styles.footer}> 
      </footer>
    </div>
  );
};

export default Home;